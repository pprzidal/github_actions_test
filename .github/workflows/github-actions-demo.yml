on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Visu3D Backend CI

jobs:
  build:
    name: Upload Release Asset
    runs-on: windows-latest # Windows Server 2019. Weil der Idefix ja auch ein Windows rechner ist
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies 
        working-directory: ./src # TODO nicht gut Ã¤ndern!!, src: https://stackoverflow.com/questions/58139175/running-actions-in-another-directory
        run: npm ci
      - name: Audit dependencies # TODO ab welchem level soll der Test failen. Zur Auswahl stehen: null, info, low, moderate, high, critical, none
        working-directory: ./src
        run: npm audit --audit-level=moderate
      - name: Test
        working-directory: ./src
        run: npm test
      - name: Build
        working-directory: ./src
        run: npm run build --if-present
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./src/build/my_server.exe
          asset_name: my_server.exe
          asset_content_type: application/x-dosexec